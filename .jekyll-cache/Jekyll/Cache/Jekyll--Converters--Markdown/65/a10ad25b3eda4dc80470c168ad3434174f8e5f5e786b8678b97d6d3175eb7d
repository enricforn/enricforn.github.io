I"p<h3 id="briefly-description-of-which-metrics-you-should-choose-to-measure-how-fast-can-your-development-team-deliver-software-and-what-quality-does-that-deliverable">Briefly description of which metrics you should choose to measure how fast can your development team deliver software, and what quality does that deliverable</h3>

<p>Here follows  key metrics to measure your team performance to delivery valued features of a product.</p>

<p><strong>Deployment frequency</strong>: how often you deploy code to production environment.</p>

<p><strong>Lead time for changes</strong>: how long does it take to go from code commit to code successfully running in production</p>

<p><strong>Mean time to recover</strong>: average time need to recover your service from an incident like unplanned outage.</p>

<p><strong>Change failure rate</strong>: what percentage of changes results either in degraded service or subsequently requires remediation</p>

<p>You can get this metrics by using tools to orchestrate your SDLC in a DevOps pipeline. Using tools such git as a SCM, CI/CD tool like Jenkins, monitoring your system with New Relic and tracing your developments in Jira.</p>

<p>Microsoft solution should be based in Visual Studio Team Services, which offers you a fully integrated ecosystem to implement your pipeline, and Azure to deploy and monitor your system.</p>

<p>The following metric is also really interested, but is focused on the performance of individuals:</p>

<p><strong>Team Morale</strong>: is the enthusiasm and persistence with which a member of a team engages in the prescribed activities of that groupâ€™ (Manning, 1991)</p>
:ET